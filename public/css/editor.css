:root {
  --transparentDark: rgb(72, 72, 72);
  --transparentLight: rgb(118, 118, 118);
  --accentBackground: rgb(39, 39, 39);
  --accentBackgroundBorder: rgb(51, 51, 51);

  --accentLight: rgb(61, 61, 61);
  --accentLightBorder: rgb(79, 79, 79);

  --accentMid: rgb(45, 45, 45);
  --accentMidBorder: rgb(71, 71, 71);

  --accentDark: rgb(26, 26, 26);
  --accentDarkBorder: rgb(47, 47, 47);

  --accentVeryDark: rgb(0, 0, 0);
  
  --textBoxBackground: rgb(82, 82, 82);
  --textBoxShadow: rgb(64, 64, 64);

  --red: rgb(255, 0, 0);
  --redBorder: rgb(150, 0, 0);
  --green: rgb(0, 153, 0);

  --blue: rgb(18, 66, 107);
  --blueBorder: rgb(13, 48, 78);

  --inEditor: rgba(0, 159, 255, 0.18);
  --menuSelected: rgba(42, 249, 84, 0.23);
  --editorHover: rgba(0, 4, 254, .18);
  --emptyBlock: rgba(124, 193, 85, 0.23);

  --white: rgb(255, 255, 255);
  --text: rgb(255, 255, 255);
  --transparent: transparent;
  --halfTransparent: rgba(255, 255, 255, .05);
  --semiTransparent: rgba(255, 255, 255, .13);

  --dragColour: rgba(0, 255, 255, 0.33);

  --system-ui: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

.light {
  --transparentDark: rgb(226, 226, 226);
  --transparentLight: rgb(206, 206, 206);
  --accentBackground: rgb(234, 234, 234);
  --accentBackgroundBorder: hsl(0, 0%, 84%);

  --accentLight: rgb(200, 200, 200);
  --accentLightBorder: rgb(165, 165, 165);

  --accentMid: rgb(255, 124, 124);
  --accentMidBorder: rgb(211, 130, 130);

  --accentDark: rgb(245, 245, 245);
  --accentDarkBorder: rgb(234, 234, 234);

  --accentVeryDark: rgb(255, 255, 255);
  
  --textBoxBackground: rgb(205, 205, 205);
  --textBoxShadow: hsl(0, 0%, 89%);

  --red: rgb(255, 46, 46);
  --redBorder: rgb(255, 120, 120);
  --green: hsl(120, 100%, 30%);
  --blue: rgb(82, 175, 255);
  --blueBorder: rgb(70, 170, 255);

  --inEditor: rgba(255, 0, 0, 0.23);
  --menuSelected: rgba(255, 138, 138, 0.23);
  --editorHover: rgba(0, 4, 255, 0.18);
  --emptyBlock: rgba(211, 0, 255, 0.23);

  --white: hsl(0, 0%, 100%);
  --text: rgb(39, 39, 39);
  --transparent: transparent;
  --halfTransparent: rgba(0, 0, 0, 0.05);
  --semiTransparent: rgba(108, 108, 108, 0.13);
  --dragColour: rgba(121, 198, 255, 0.33);
}

.light .settingProperty,
.light .editorProperty {
  border: 1px solid var(--accentBackgroundBorder) !important;
}

.light .selectable,
.light #saveExisting,
.light #saveNew,
.light #uploadExisting,
.light #uploadNew {
  color: var(--text);
}

html {
  opacity: 1;
  color: var(--text);
}

html::before {
  content: "";
  position: fixed;
  inset: 0;
  background-color: var(--transparentLight);
  background-image:
    linear-gradient(45deg, var(--transparentDark) 25%, transparent 25%),
    linear-gradient(135deg, var(--transparentDark) 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, var(--transparentDark) 75%),
    linear-gradient(135deg, transparent 75%, var(--transparentDark) 75%);
  background-size: 25px 25px;
  background-position: 0 0, 12.5px 0, 12.5px -12.5px, 0px 12.5px;
}

body {
  background-size: 20px 20px;
  background-position: 0 0, 0 10px, 10px -10px, -10px 0
}

h2 {
  background: none;
  padding: 5px 15px;
  margin: 0;
  font-size: 1.2em;
}

#mainBody::before {
  content: "";
  background: inherit;
  position: fixed;
  inset: 0;
}

.creditsSection {
  display: none;
  padding: 10px calc(50% - 30vw);
  height: calc(100% - 90px) !important;
  padding-bottom: 80px;
}



header,
footer {
  background: var(--accentBackground);
  width: calc(100% - 14px);
  padding: 7px
}

main header,
main footer {
  background: var(--accentBackground);
  width: calc(100% - 24px);
  padding: 7px;
  margin: 5px;
  border-radius: 8px;
  border-top: 1px solid var(--accentBackgroundBorder);
  font-size: initial;
}

main > header {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
}
main > header> * {
  margin-left: 5px;
}
.gridSpacer {
  flex: 1;
}

header>div {
  pointer-events: none
}

#creditsScroller {
  margin-top: -5px;
  margin-bottom: -5px;
}

.editing #creditsScroller,
.settings #creditsScroller {
  margin-right: 5px
}

#creditsScroller.noScroll {
  overflow-y: hidden;
  width: 100%;
  top: 0;
  position: absolute
}

.flexCol {
  display: flex;
  flex-direction: column
}

.label {
  margin-bottom: 5px
}

.hidden {
  display: none !important
}

.endFadeGroup.hidden {
  transition: opacity 1s 0s;
  opacity: 0;
  display: flex !important;
  pointer-events: none;
}

.extraHidden {
  transition: opacity 1s 0s;
  opacity: 0 !important
}

header button,
footer button,
dialog button,
#editorCont button,
menu button {
  font-size: 16px;
  cursor: pointer;
  height: 2.5em;
  padding: .5em 1em;
  box-sizing: border-box;
  border-radius: 5px;
  min-width: 50px;
  color: var(--text);
  transition: .2s;
  /*! margin-left: 7px; */
  background-color: transparent;
  border: none;
  border-top: transparent 1px solid
}

#editorCont button {
  margin: 5px;
  height: unset;
  background-color: var(--accentMid);
  border-top: 1px var(--accentMidBorder) solid
}

button[disabled] {
  cursor: not-allowed;
  color: var(--accentBackgroundBorder);
  background-color: var(--accentVeryDark) !important;
  border-color: var(--accentDark) !important;
}

header button:hover,
footer button:hover,
dialog button:hover,
#editorCont button:hover,
menu button {
  background-color: var(--accentDark);
  border-top: 1px var(--accentDarkBorder) solid;
}

menu button:hover {
  background-color: var(--accentDark);
  border-top: 1px var(--accentDarkBorder) solid
}

button.active {
  background-color: var(--blue);
  border-top: var(--blueBorder) 1px solid
}

input[type=text],
.editorProp,
.settingProp {
  font-size: 16px;
  padding: .5em;
  box-sizing: border-box;
  background-color: var(--textBoxBackground);
  border: var(--accentVeryDark) 1px solid;
  box-shadow: var(--textBoxShadow) 0 0 7px 0 inset;
  border-radius: 5px;
  min-width: 50px;
  color: var(--text);
  transition: .2s;
  user-select: text
}

header select,
footer select,
dialog select {
  background-image: url(../img/arrow_down.png);
  color: var(--text);
  appearance: none;
  -webkit-appearance: none;
  background-position-x: right;
  background-position-y: center;
  background-repeat: no-repeat;
  background-size: 2em;
  font-size: 16px;
  cursor: pointer;
  height: 2.5em;
  padding: .5em;
  padding-right: 2em;
  box-sizing: border-box;
  background-color: var(--accentDark);
  border: 1px var(--accentMid) solid;
  border-radius: 5px;
  min-width: 50px;
  filter: none
}

header select:focus {
  background-color: var(--accentDark)
}

.right {
  float: right
}

input[type=checkbox] {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  width: 44px;
  height: 24px;
  border-radius: 12px;
  margin: 0;
  position: relative;
  overflow: visible;
  border: none;
  box-shadow: var(--accentVeryDark) 0 0 5px -3px !important;
  cursor: pointer
}

input[type=checkbox]:checked::before {
  left: 22px;
}

input[type=checkbox]::before {
  content: "";
  background: var(--white);
  width: 20px;
  height: 20px;
  position: absolute;
  border-radius: 100%;
  top: 2px;
  box-sizing: border-box;
  left: 2px;
}

input[type=radio][readonly],
input[type=checkbox][readonly] {
  border-radius: 12px;
  padding: 0;
  border: none;
  cursor: not-allowed
}

input[type=checkbox] {
  margin: 2px
}

input[type="checkbox"].settingGroupCheck {
  background-color: var(--textBoxBackground);
}

input[type=checkbox]:checked {
  background-color: var(--green)
}

input[type=checkbox] {
  background-color: var(--red)
}

input[type=checkbox],
input[type=checkbox]::before {
  transition: .1s
}

.endFadeGroup {
  transition: opacity 1s 1s;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  opacity: 1
}

.settings .endFadeGroup,
.editing .endFadeGroup {
  transition: opacity 0s 0s;
}

#creditsLogos {
  transition: opacity .5s;
  height: 100%;
  position: relative;
  display: block;
  opacity: 1
}

#creditsLogos.hidden {
  display: block;
  opacity: 0
}

dialog {
  width: 100%;
  height: 100%;
  background-color: var(--semiTransparent);
  display: flex;
  flex-direction: column;
  color: var(--text);
  border: none;
  margin: 0;
  padding: 0;
  z-index: 3;
}

dialog>* {
  margin: auto;
  min-width: 300px;
  box-shadow: var(--accentVeryDark) 0 0 7px 0;
  border-radius: 10px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  max-width: calc(100% - 100px);
  max-height: calc(100% - 100px);
  background-color: var(--accentVeryDark);
}

dialog>*>section {
  padding: 10px;
  font-size: 16pt;
  overflow-y: auto;
}

dialog footer {
  display: grid;
  grid-auto-flow: column;
  grid-column-gap: 7px;
}

dialog header,
dialog footer {
  width: calc(100% - 14px);
  border-radius: 0;
  border-top: 0;
  background: var(--accentMid);
  margin: 0
}

dialog footer button {
  flex: 1
}

dialog button {
  background: var(--accentLight);
  border-top: 1px solid var(--accentLightBorder);
}

.name:focus-visible,
.role:focus-visible,
.content:focus,
.content:focus-visible {
  outline: 2px solid rgb(31, 112, 171);
  background: var(--semiTransparent);
}

.inEditor.content {
  outline: 2px dashed rgb(31, 112, 171);
}

.downloadRow {
  display: flex;
  justify-content: space-between;
  margin-bottom: 5px;
}

.downloadRow:last-of-type {
  margin-bottom: 0;
}

.downloadRow input {
  margin-left: 15px;
}

.renderLable {
  font-size: 0.6em;
  padding: 3px;
  margin-top: 5px;
}

#galleryImages, #galleryFonts {
  display: flex;
  flex-wrap: wrap;
}

#galleryCont {
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}


.galleryFontDemo,
.galleryFontDemoMore {
  margin: 15px;
  margin-bottom: 5px;
  font-size: 1.5em;
}

.galleryFontDemoMore {
  display: none;
}

.galleryMore::before {
  content: "More";
}

.moreFonts .galleryMore::before {
  content: "Less";
}

.moreFonts .galleryFontDemo {
  display: none;
}

.moreFonts .galleryFontDemoMore {
  display: block;
}

.gallerySize::before {
  content: "Bigger";
}

.biggerImages .gallerySize::before {
  content: "Smaller";
}

.galleryImages {
  max-width: calc(100vw - 160px);
  width: 150px;
}

.biggerImages .galleryImages {
  width: 450px;
}

.galleryPreviews {
  background-color: var(--accentDark);
  border-radius: 5px;
  overflow: hidden;
  margin: 10px;
  justify-content: space-between;
  display: flex;
  flex-direction: column;
}

.galleryInfo {
  font-size: 0.8em;
  padding: 10px;
}

.galleryType-png,
.galleryType-svg,
.galleryType-jpg,
.galleryType-jpeg,
.galleryType-otf,
.galleryType-ttf {
  background-repeat: no-repeat;
  background-position-x: calc(100% - 3px);
  background-size: 1.5em;
  background-position-y: center;
}
.galleryType-png {
  background-image: url(../img/png.svg);
}
.galleryType-jpg,
.galleryType-jpeg {
  background-image: url(../img/jpg.svg);
}
.galleryType-svg {
  background-image: url(../img/svg.svg);
}
.galleryType-ttf {
  background-image: url(../img/ttf.svg);
}
.galleryType-otf {
  background-image: url(../img/otf.svg);
}

.galleryPreviews header {
  margin-right: 2em;
  text-transform: capitalize;
}

dialog figure {
  flex: 1;
  display: grid;
  place-items: center;
  margin: 15px auto;
  padding: 0px 10px;
}

#tutHead {
  padding: 11px
}

#tutBody {
  font-size: 12pt
}

#tutClose {
  margin-left: 0
}

#uploadFileBut {
  width: 100%
}

.uploadFont #uploadHead::before {
  content: "Upload Fonts";
}
.uploadMedia #uploadHead::before {
  content: "Upload Images";
}

#uploadName {
  width: 100%;
  margin-bottom: 10px
}

#saveExisting *,
#saveNew *,
#uploadExisting *,
#uploadNew * {
  pointer-events: none
}

.selectable {
  margin-bottom: 10px;
}

.selectable:last-child {
  margin-bottom: 0;
}

.selectable select,
#saveExisting select,
#saveNew select,
#uploadExisting select,
#uploadNew select {
  cursor: not-allowed;
  color: var(--accentMidBorder);
  background-color: var(--accentDark) !important;
  transition: .3s
}

.selectable.selected select,
#saveExisting.selected select,
#saveNew.selected select,
#uploadExisting.selected select,
#uploadNew.selected select {
  cursor: pointer;
  color: var(--text)
}

.selectable.selected *,
#saveExisting.selected *,
#saveNew.selected *,
#uploadExisting.selected *,
#uploadNew.selected * {
  pointer-events: all
}

#saveNew,
#uploadNew {
  margin-top: 10px
}

.hidden + #saveNew {
  margin-top: 0;
}

#saveFile,
#uploadFile {
  margin-bottom: 10px
}

.selectable,
#saveExisting,
#saveNew,
#uploadExisting,
#uploadNew {
  position: relative;
  border-radius: 8px;
  overflow: hidden;
  background-color: var(--accentVeryDark);
  color: var(--textBoxBackground);
  padding: 5px;
  padding-left: 5px;
  cursor: pointer;
  transition: .3s
}

.selectable.selected,
#saveExisting.selected,
#saveNew.selected,
#uploadExisting.selected,
#uploadNew.selected {
  background-color: var(--accentBackground);
  color: var(--text);
  cursor: auto;
  padding-left: 15px
}

.selectable.selected::before,
#saveExisting.selected::before,
#saveNew.selected::before,
#uploadExisting.selected::before,
#uploadNew.selected::before {
  width: 5px
}

.selectable::before,
#saveExisting::before,
#saveNew::before,
#uploadExisting::before,
#uploadNew::before {
  content: "";
  position: absolute;
  top: 5px;
  left: 5px;
  height: calc(100% - 10px);
  width: 0;
  background-color: var(--green);
  transition: .3s;
  border-radius: 10px
}

dialog footer button:first-of-type {
  margin: 0 !important
}

#creditsFooter {
  width: fit-content;
  max-width: calc(100% - 24px);
  position: absolute;
  bottom: 0;
  left: 0;
  display: grid;
  grid-auto-flow: column;
  grid-column-gap: 7px;
  z-index: 2;
}

#creditsButton {
  margin-left: 0px;
}

#newArticle {
  order: 1;
  display: none;
}

.editing #newArticle {
  display: block;
}

#editorCont {
  background-color: var(--accentBackground);
  transition: .3s;
  width: 0;
  box-sizing: border-box;
  border-left: 0;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  position: relative;
  border-top: 1px solid var(--accentBackgroundBorder);
  border-bottom: 3px solid var(--accentBackground);
  color: var(--text);
  font-style: normal;
  font-size: 3vh;
  font-weight: normal;
}

#editorCont.open {
  width: 400px;
  margin: 5px;
  border-radius: 8px;
  margin-left: 0
}

#editorCont .settingProperty.active header,
#editorCont .settingProperty header:hover,
#editorCont .editorProperty.active header,
#editorCont .editorProperty header:hover {
  background: var(--accentDark)
}

.editing .content:hover {
  background-color: var(--semiTransparent);
}

.editing .block:hover {
  background-color: var(--halfTransparent);
  cursor: pointer
}

.editing .block.inEditor {
  background-color: var(--inEditor);
  border-radius: 8px
}

.menuSelected.content::after,
.inEditor.content::after,
.dragging::after,
.editing .block::after,
.editing .columns::after {
  content: "Editing";
  position: absolute;
  top: 2px;
  left: 5px;
  font-size: 10pt;
  font-weight: normal;
  font-style: italic;
  font-family: var(--system-ui);
}

.editing .block::after {
  content: "Group";
  top: 0px;
  left: 3px;
  color: var(--semiTransparent);
  z-index: 1;
  cursor: move;
}

.editing .columns::after {
  content: "Columns";
  color: var(--semiTransparent);
  z-index: 1;
  left: 50%;
  top: -20px;
  transform: translateX(-50%);
  cursor: move;
}

.menuSelected.content::after {
  content: "Selected for Menu";
}

.dragging::after {
  content: "Moving";
}

.dragging.block::after {
  content: "Group, Moving";
  top: 0px;
  left: 3px;
  color: var(--white);
  z-index: 1;
  cursor: move;
}

#creditsFooter .dragging::after {
  content: "Moving";
  font-size: 7pt;
}

.menuSelected.inEditor.content::after {
  content: "Editing, Selected for Menu";
}

.dragging.menuSelected::after {
  content: "Selected for Menu, Moving";
}

.dragging.inEditor.content::after {
  content: "Editing, Moving";
}

.dragging.menuSelected.inEditor.content::after {
  content: "Editing, Selected for Menu, Moving";
}

.inEditor,
.dragging,
.menuSelected {
  position: relative;
}

.editing .block.menuSelected {
  background-color: var(--menuSelected);
}

.editing .block:empty {
  padding: 20vh 0 !important;
  width: 80%;
  background-color: var(--emptyBlock);
  max-height: 80vh;
  margin: auto;
}

.editing .block:empty::before {
  content: "Click to edit";
  text-align: center;
  justify-content: center;
}

.block {
  transition: .1s;
  border-radius: 5px;
  padding: 10px;
  margin: 15px 0px;
  outline: 3px dotted transparent;
  position: relative;
}

.editing .block {
    outline: 3px dotted var(--transparentDark);
}

.content {
  border-radius: 5px;
  margin: 5px;
  transition: .2s;
  outline: 2px dashed transparent;
}

.newContent {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 0.12fr));
  font-family: var(--system-ui);
  font-size: 0.5em;
  background: var(--emptyBlock) !important;
  padding: 20px;
  justify-content: center;
  transition: 0s;
}

.newContent div {
  filter: grayscale(1);
  transition: 0.3s;
}
.newContent div:hover {
  filter: none;
  font-weight: bold;
}
.newContent div * {
  pointer-events: none;
}

.newContent .dragCont {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 0.12fr));
  font-family: var(--system-ui);
  background: var(--emptyBlock) !important;
  padding: 20px;
  justify-content: center;
  width: ;
  font-weight: normal !important;
}
.newContent.draggingSelected {
  display: block;
  padding: 0;
}

.columns > .block {
  margin: 10px;
  padding: 10px;
}

.addNewButAfter,
.addNewButBefore {
  position: absolute;
  width: 100%;
  height: 2em;
  bottom: -2em;
  left: 0;
  display: flex;
  justify-content: center;
  flex-direction: column
}

.endFadeGroup > * > .addNewButAfter,
.endFadeGroup > * > .addNewButBefore {
  display: none;
}

.addNewButBefore {
  top: -2em;
  bottom: unset
}

.addNewButPlus {
  height: 1.3em;
  width: 1.3em;
  background-image: url(../img/plus.svg);
  background-size: 100%;
  background-repeat: no-repeat;
  cursor: pointer;
  border-radius: 100%;
  box-shadow: var(--textBoxShadow) 0 1px 5px -3px;
  transition: .1s;
  margin: auto
}
.editing .columns:hover {
  /*! column-gap: 40px; */
}
.columns {
  transition: .2s;
  column-gap: 0px;
  position: relative;
}
.columns>.block .addNewButAfter {
  width: 1.5em;
  height: 100%;
  bottom: 0;
  right: -1.4em;
  left: unset
}

.columns>.block .addNewButBefore {
  width: 1.5em;
  height: 100%;
  top: 0;
  left: -1.5em;
  right: unset
}

.addNewButPlus:hover {
  height: 1.5em;
  width: 1.5em
}

.editing #editButton,
.settings #settings,
#menuDeleteContent, 
#menuDeleteBlock,
#menuDeleteFade,
#menuDeleteSetting,
#menuDeleteColumn {
  background-color: var(--red);
  border-top: 1px var(--redBorder) solid
}

.editorImg,
.editorImgGrouped {
  max-width: 92%;
  padding: 4%;
}

#editorCont header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: .3s;
  background: 0 0;
  text-transform: capitalize;
}

#editorCont > header {
  margin: 5px 10px 2px 8px;
  width: auto;
  padding-bottom: 0;
}

h3 {
  margin: 0;
  font-size: 1.1em;
  text-transform: capitalize;
}
.editorGroup {
  border: 2px dotted var(--accentLightBorder);
  margin: 13px;
  border-radius: 15px;
  display: none;
  margin-bottom: 5px;
}
.active + .editorGroup {
  display: block;
}

.editorGroup > .editorProperty,
.editorGroup > .settingProperty{
  margin: 5px;
}

.propertyLabel {
  padding: 4px 5px;
  font-size: 12pt;
  margin: auto 2px;
}

.settingProperty,
.editorProperty {
  border-radius: 10px;
  overflow: hidden;
  margin: 10px;
  flex-shrink: 0;
  margin-bottom: 0;
  border-top: 1px solid transparent
}

.settingProperty.active,
.editorProperty.active,
.settingProperty:hover,
.editorProperty:hover {
  border-top: 1px solid var(--accentDarkBorder);
}

.editorHeading,
.settingHeading {
  font-size: 0.8em;
}

.settingPropCont,
.editorPropCont {
  max-height: 0;
  background-color: var(--accentVeryDark);
  transition: .3s;
  display: flex
}

.editorPropCont.editorLayoutCont {
  flex-direction: column;
  gap: 5px;
  overflow: hidden;
}
.editorLayouts {
  display: flex;
  justify-content: space-between;
  margin-right: 4px;
}
.editorLayouts:first-of-type {
  margin-top: 5px;
}
.editorLayouts:last-of-type {
  margin-bottom: 5px;
}

.active .settingPropCont,
.active .editorPropCont {
  max-height: 100%
}

.settingProp,
.editorProp {
  margin: 5px;
  flex: 1;
  width: calc(100% - 10px);
  padding: 3px
}

.settingRulePair,
.editorNamesPair {
  column-count: 2;
  column-gap: 0
}

.settingRulePair {
  display: flex;
}

.editorNameGroup {
  break-inside: avoid
}

#editorProp_image,
#editorProp_names,
#editorProp_text,
.settingPropCont {
  flex-direction: column
}

.editorNewGroup,
.settingNewGroup {
  width: 100%;
  display: flex;
  overflow: hidden
}

.editorNewRole,
.editorNewName,
.settingNewRule {
  flex: 1
}

#editorColsBut {
  width: 100%
}

#editorCont button.editorNewPairName,
#editorCont button.editorNewText,
#editorCont button.editorNewImage {
  background-image: url(../img/plus.svg);
  background-repeat: no-repeat;
  background-position: center;
  width: 100%;
  background-color: transparent;
  border: none;
  box-shadow: none;
  padding: 0;
  height: 1em;
  margin: 0;
  display: block
}

.editorNewImage {
  margin-bottom: 6px !important
}

.editorInput_text {
  flex: auto;
  max-width: calc(100% - 10px);
  min-width: calc(100% - 10px);
}

header *,
footer *,
header,
footer,
dialog,
#editorCont,
.editing .block:empty::before {
  font-family: var(--system-ui);
}

.tabButton {
  text-transform: capitalize;
  min-width: 100px;
}

#editorCont::after {
  content: "";
  padding: 5px;
  order: 100
}

.editorNewText {
  margin-bottom: 6px !important
}

.editorNameInput.editorProp {
  margin: 0 5px
}

menu {
  opacity: 0;
  z-index: -1;
  position: fixed;
  background-color: var(--accentBackground);
  box-shadow: var(--accentVeryDark) 0 0 7px 0;
  border-radius: 10px;
  padding: 10px;
  transition: top 0s .2s, left 0s .2s, opacity .2s;
  display: grid;
  margin: 0;
  grid-row-gap: 10px;
}

menu>button {
  background-color: var(--accentLight);
  border-top: 1px var(--accentLightBorder) solid;
}

.menuActive {
  opacity: 1;
  z-index: 3;
  transition: top 0s, left 0s, opacity .2s
}

#menuDeleteColumn,
#newContent,
#sectionsSettings,
#menuDeleteContent,
#newBlock,
#menuDeleteBlock,
#menuDeleteFade,
#menuDeleteSetting {
  display: none
}

.menuColumn #menuDeleteColumn {
  display: block;
}

.menuContent #newContent,
.menuContent #menuDeleteContent {
  display: block;
}

.menuBlock #newBlock,
.menuBlock #menuDeleteBlock {
  display: block;
}

.menuTabs #menuDeleteFade,
.menuTabs #sectionsSettings {
  display: block;
}

.menuSetting #menuDeleteSetting {
  display: block;
}

.menuBlock.menuBlockNew #menuDeleteBlock,
.menuContent.menuContentNew #menuDeleteContent {
  display: none;
}

.menuActive.above::after {
  position: absolute;
  content: "";
  left: 50%;
  bottom: 0;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 10px solid var(--accentBackground);
  transform: translate(-50%, 100%)
}

.menuActive.bellow::after {
  position: absolute;
  content: "";
  left: 50%;
  top: 0;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 10px solid var(--accentBackground);
  transform: translate(-50%, -100%)
}

.draggingSelected {
  background: var(--dragColour) !important;
  position: relative;
}

.draggingSelected > * {
  filter: blur(4px) !important;
}

.dragging_block .content:not(.blockContainer) {
  pointer-events: none;
}

.dragging_content .block,
.dragging_content .content > * {
  pointer-events: none;
}

.dragging_content .content {
  pointer-events: all;
}

.draggingSelected::before {
  content: "Move Here";
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  font-family: var(--system-ui);
  z-index: 1;
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 0.58);
  font-style: italic;
  font-weight: bold;
  font-size: 3vh;
  margin-top: -7px;
  pointer-events: none;
}

#creditsFooter .dragging_block > :hover:not(.dragging)::before,
#creditsFooter .draggingSelected::before {
  font-size: 14pt;
  white-space: nowrap;
  margin-top: 0px;
}

.dragging_block *,
.dragging_content * {
  -webkit-user-select: none;
  user-select: none;
}

.dragging {
  background: var(--dragColour) !important;;
}

#toutorial>div {
  max-width: 600px
}
