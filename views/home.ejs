<!DOCTYPE html>

<%
    const images = {};
    const fonts = {};
    for (const key in saves) {
        images[key] = saves[key].images;
        fonts[key] = saves[key].fonts;
    }
    const defaultProject = project ? project : Object.keys(saves)[0];
    let loadImages = typeof images[defaultProject] == 'undefined' ? [] : images[defaultProject];
    const renderDisabled = render ? '' : 'disabled';
%>

<html lang="en">

  <head>
    <meta charset="UTF-8">
    <title><%- serverName %> - Credits Generator</title>
    <link rel="icon" href="img/clapper.png" sizes="32x32">
    <link rel="icon" href="img/clapper.png" sizes="192x192">
    <link rel="stylesheet" href="css/credits.css">
    <link rel="stylesheet" href="css/editor.css">
    <style>
        <% globalFonts.forEach(function(font) { %>
            @font-face {
                font-family: "<%- font.substring(0,font.indexOf(".")) %>";
                src: url("fonts/<%- font %>");
            }
        <% }); %>
    </style>
    <script src="lib/webcg-framework.umd.js"></script>
    <script src="lib/jquery-3.6.0.js"></script>
    <script src="lib/cookie.js"></script>
    <script>
        let saves = <%- JSON.stringify(saves) %>;
        let images = <%- JSON.stringify(loadImages) %>;
        let projectFonts = <%- JSON.stringify(fonts) %>;
        let globalFonts = <%- JSON.stringify(globalFonts) %>;
        let fonts = <%- JSON.stringify(globalFonts) %>;
        let projectImages;
        let content;
        let currentProject = null;
        let currentVersion = null;
        let dataOptions = [];
        let runWindow;
        const template = false;
        const loadedEvent = new Event('loaded');
        let loaded = false;
        const defaultProject = "<%=defaultProject%>";
    </script>
    <script src="js/builder.js"></script>
    <script src="js/editor.js"></script>
    <script src="js/menu.js"></script>
    <script src="js/ui.js"></script>
    <script src="js/jscolor.js"></script>
  </head>

  <body id="mainBody" class="background">
    <iframe id="downloadIframe" style="display:none;"></iframe>
    <main id="scene" class="background creditsBody">
      <header>
        <div>Project:</div>
        <select id="loadFile" data-projects="<%- Object.keys(saves).join(",") %>">
            <% for (const save in saves) {%>
                <option id='proj_<%-save%>>' value='<%-save%>' data-versions="<%- Array(saves[save].count - 1 + 1).fill().map((_, idx) => 1 + idx).join(',') %>"><%-save%></option>
            <% } %>
        </select>
        <div>Version:</div>
        <select id="loadVersion">

        </select>
        <button id="newButton">New</button>
        <button id="saveButton">Save</button>
        <button id="uploadButton">Import Project</button>
        <button id="downloadMultiButton">Download</button>
        <button id="galleryButton">Gallery</button>
        <button id="renderButton" <%=renderDisabled%>>Render</button>
        <button id="run" class="right">Run</button>
        <button id="full" class="right">Fullscreen</button>
        <div class="gridSpacer"></div>
        <button id="editButton" class="right">Edit</button>
        <button id="settings" class="right">Settings</button>
        <button id="help" class="right">Help</button>
      </header>

      <div id="creditsScroller">
        <div id="creditsCont">
        </div>
      </div>

      <footer id="creditsFooter">
        <button id="creditsButton" class="tabButton active">Main</button>
        <button id='newArticle'>+</button>
      </footer>
    </main>

    <aside id="editorCont">
    </aside>

    <dialog id="gallery" class="hidden">
      <form id="galleryForm" action="/" method="POST">
        <header>Gallery</header>
        <section id="galleryCont">
          <h2>Fonts</h1>
          <section id="galleryFonts">
  
          </section>
          <h2>Images</h1>
          <section id="galleryImages">
  
          </section>
        </section>
        <footer>
          <button id="galleryRefresh" type="button">Refresh</button>
          <button id="uploadMediaButton" type="button">Upload Images</button>
          <button id="uploadFontButton" type="button">Upload Fonts</button>
          <button id="galleryButClose" type="button">Close</button>
        </footer>
      </form>
    </dialog>

    <dialog id="render" class="hidden">
      <form id="renderForm" action="/" method="POST">
        <header>Render</header>
        <section id="renderCont">
          <div class="label">Resolution and framerate</div>
          <div>
            <select id="renderRes">
              <option value='' selected disabled hidden>Resolution</option>
              <option value='1440'>1440 x 720</option>
              <option value='1920'>1920 x 1080</option>
              <option value='3840'>3840 x 2160</option>
              <option value='4096'>4096 x 2160</option>
            </select>
            <select id="renderRate">
              <option value='' selected disabled hidden>Framerate</option>
              <option value='24'>24p</option>
              <option value='25'>25p</option>
              <option value='30'>30p</option>
              <option value='48'>48p</option>
              <option value='50'>50p</option>
              <option value='60'>60p</option>
            </select>
          </div>
          <div class="renderLable">
            <span>The credits will take: </span>
            <span id="renderFades"></span>
            <span> seconds to run</span>
          </div>
        </section>
        <footer>
          <button id="renderDo" type="button">Render</button>
          <button id="renderClose" type="button">Cancel</button>
        </footer>
      </form>
    </dialog>

    <dialog id="downloadsPopup" class="hidden">
      <form id="downloadForm" action="/" method="POST">
        <header id="downloadHead">Download</header>
        <section id="downloadBody">
          <div class="downloadRow">
            <div id="downloadFile">
              Export Project File
            </div>
            <input type="checkbox" checked></input>
          </div>
          <div class="downloadRow">
            <div id="downloadImg">
              Download Images
            </div>
            <input type="checkbox" checked></input>
          </div>
          <div class="downloadRow">
            <div id="downloadFonts">
              Download Fonts
            </div>
            <input type="checkbox"></input>
          </div>
          <div class="downloadRow">
            <div id="downloadTemplate">
              Download Caspar Template
            </div>
            <input type="checkbox"></input>
          </div>
        </section>
        <footer id="downloadFoot">
          <button id="downloadButDone" type="button">Download</button>
          <button id="downloadButCancel" type="button">Cancel</button>
        </footer>
      </form>
    </dialog>

    <dialog id="newSave" class="hidden">
      <form id="saveForm" action="/" method="POST">
        <header id="saveHead">Import</header>
        <section id="saveBody">
          <div id="saveFile" class="hidden">
            <input type="file" id="saveUpload" name="uploadJSON">
          </div>
          <div id="saveExisting" class="selected">
            <div class="label">Add to existing</div>
            <div>
              <select id="loadFileBut">
                  <% for (const save in saves) {%>
                      <option value='<%-save%>' data-versions="<%- Array(saves[save].count - 1 + 1).fill().map((_, idx) => 1 + idx).join(',') %>"><%-save%></option>
                  <% } %>
              </select>
              <select id="loadVersionBut">
                <option value='new'>New Version</option>
              </select>
            </div>
          </div>
          <div id="saveNew" class="flexCol">
            <div class="label">Create new</div>
            <input id="saveNewProject" type="text" placeholder="Project">
          </div>
        </section>
        <footer id="saveFoot">
          <button id="saveButSave" type="button">Upload</button>
          <button id="saveButCancel" type="button">Cancel</button>
        </footer>
      </form>
    </dialog>

    <dialog id="uploadMedia" class="hidden">
      <form id="uploadForm" action="/" method="POST">
        <header id="uploadHead"></header>
        <section id="uploadBody">
          <div id="uploadFile">
            <input type="file" id="uploadImageInput" name="files[]" multiple>
          </div>
          <div id="uploadExisting" class="selected">
            <div class="label">Add to existing</div>
            <select id="uploadFileBut">
              <% for (const save in saves) {%>
                  <option value='<%-save%>' data-versions="<%- Array(saves[save].count - 1 + 1).fill().map((_, idx) => 1 + idx).join(',') %>"><%-save%></option>
              <% } %>
            </select>
          </div>
          <div id="uploadNew" class="flexCol">
            <div class="label">Create new</div>
            <input id="uploadNewProject" type="text" placeholder="Project">
          </div>
        </section>
        <footer id="uploadFoot">
          <button id="uploadButSave" type="button">Upload</button>
          <button id="uploadButCancel" type="button">Cancel</button>
        </footer>
      </form>
    </dialog>

    <dialog id="toutorial" class="hidden">
      <div>
        <header id="tutHead">Help/Info</header>
        <section id="tutBody">
          This site can be used for creating and editing credits. This can be split into 'fades' and 'scrols', these are added and re-aranged via the tabs at the bottom<br/>
          </br>
          The credits can either be run in browser vai the "Run" button, or loaded into CasparCG via a custom template.<br/>
          </br>
          If you specify a 'source' variable in caspar it will atempt to load the credits from that url!<br/>
          To load the credits into Caspar via a file, use the 'download' button, select template and any other content you need and drop it all in the templates folder in CasparCG.</br>
          If you wish to load the credits directly from the website, use the url in the format show here:</br>
          <?=$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI]?>saves/PROJECT/VERSION.json</br>
          </br>
          Settings for each fade/scroll can be changed in the settings menu or by selecting settings in the right click menu on it's tab
          </br>
          In fades/scroll settings and for individual content items you can specify custom styling, these are in the form of CSS rules:
          <a href="https://www.w3schools.com/cssref/">https://www.w3schools.com/cssref/</a></br>
          </br>
          To make changes to the credits, click on the edit button. From there you can simple click on any content to edit it directly and see it's styles and settings in the edit menu.
          <br>
          Content can be moved around by clicking and dragging. TIP: You can move columns and groups by their lables!</br>
          You can right click on styles in the editor to delete them. You can also right click on any content to delete or add new content.<br>
          <br>
          For help and support, or to raise any bugs or feature requests, please go to <a href="https://github.com/Xeue/Credits-Generator">https://github.com/Xeue/Credits-Generator</a>
        </section>
        <footer id="tutFoot">
          <button id="tutClose" type="button">Got it!</button>
        </footer>
      </div>
    </dialog>

    <menu class="menuContent">
      <button id="newContent">New Content</button>
      <button id="newBlock">New Group</button>
      <button id="sectionsSettings">Settings</button>
      <button id="menuDeleteColumn">Delete Columns</button>
      <button id="menuDeleteContent">Delete Content</button>
      <button id="menuDeleteBlock">Delete Group</button>
      <button id="menuDeleteFade">Delete Fade</button>
      <button id="menuDeleteSetting">Delete Style</button>
    </menu>
  </body>

</html>
